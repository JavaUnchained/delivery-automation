{"version":3,"sources":["./src/app/model/userregistrationdto.ts","./src/app/model/ration.ts","./src/environments/environment.ts","./src/app/services/ration-service.service.ts","./src/app/services/login.service.ts","./src/app/components/operator-coupons/operator-coupons.component.ts","./src/app/components/operator-coupons/operator-coupons.component.html","./src/app/services/client.service.ts","./src/app/components/operator-order/operator-order.component.ts","./src/app/components/operator-order/operator-order.component.html","./src/app/components/ration-form/ration-form.component.ts","./src/app/components/ration-form/ration-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/courier-coupons/courier-coupons.component.ts","./src/app/components/courier-coupons/courier-coupons.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/operator-dashboard/operator-dashboard.component.ts","./src/app/components/operator-dashboard/operator-dashboard.component.html","./src/app/app.module.ts","./src/app/components/client-order/client-order.component.ts","./src/app/components/client-order/client-order.component.html","./src/app/model/current-user-service.ts","./src/app/components/cook-coupons/cook-coupons.component.ts","./src/app/components/cook-coupons/cook-coupons.component.html","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/ration-list/ration-list.component.ts","./src/app/components/ration-list/ration-list.component.html","./src/app/components/client-refaund/client-refaund.component.ts","./src/app/components/client-refaund/client-refaund.component.html","./src/app/services/coupon.service.ts","./src/app/model/authrequestdto.ts","./src/app/services/order.service.ts","./src/app/components/client-dashboard/client-dashboard.component.ts","./src/app/components/client-dashboard/client-dashboard.component.html","./src/app/components/client-list/client-list.component.ts","./src/app/components/client-list/client-list.component.html","./src/app/model/orderdto.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class UserRegistrationDTO {\r\n  constructor(\r\n    public username: string,\r\n    public password: string,\r\n    public name: string,\r\n    public surname: string,\r\n    public phoneNumber: string,\r\n    public account: number\r\n  ) {\r\n  }\r\n}\r\n","export class Ration {\n  id: bigint;\n  name: string;\n  description: string;\n  price: number;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Ration} from '../model/ration';\nimport {observable, Observable} from 'rxjs';\nimport { CurrentUserService } from '../model/current-user-service';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RationService {\n  id: number;\n  private readonly usersUrl: string;\n  private readonly deleteurl: string;\n  private readonly clientRation: string;\n\n  constructor(private http: HttpClient, private modelService: CurrentUserService) {\n    this.usersUrl =  'http://localhost:8080/operator/rations';\n    this.deleteurl = 'http://localhost:8080/operator/deleterations';\n    this.clientRation = 'http://localhost:8080/client/rations';\n    this.id = modelService.getCurrentId();\n  }\n\n  public findAll(): Observable<Ration[]> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.get<Ration[]>(this.usersUrl, {headers});\n  }\n\n  public delete(ids: bigint[]): Observable<any> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration delete is ' + ids);\n    console.log(JSON.stringify(ids));\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.post<bigint[]>(this.deleteurl,  ids, {headers})\n      .pipe(catchError(async (data) => console.error(data)));\n  }\n\n  // tslint:disable-next-line:typedef\n  public save(ration: Ration) {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.post<Ration>(this.usersUrl, ration, {headers});\n  }\n\n  public findAllForClient(): Observable<Ration[]> {\n    const token = localStorage.getItem(String(this.id));\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.get<Ration[]>(this.clientRation, {headers});\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {AuthRequestDTO} from '../model/authrequestdto';\nimport {UserRegistrationDTO} from '../model/userregistrationdto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  authRequest: AuthRequestDTO;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public login(username: string, password: string): Observable<any> {\n    console.log('try login', username);\n    this.authRequest = new AuthRequestDTO(username, password);\n    return this.http.post('http://localhost:8080/auth', this.authRequest, {responseType: 'text' as 'json'});\n  }\n\n  public registerUser(client: UserRegistrationDTO): void {\n    this.http.post('http://localhost:8080/registration', client)\n      .subscribe(data => {});\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CouponDTO} from '../../model/couponDTO';\nimport {CouponService} from '../../services/coupon.service';\nimport {CookCouponDTO} from '../../model/cook-coupon-dto';\n\n@Component({\n  selector: 'app-operator-coupons',\n  templateUrl: './operator-coupons.component.html',\n  styleUrls: ['./operator-coupons.component.css']\n})\nexport class OperatorCouponsComponent implements OnInit {\n  coupons: CookCouponDTO[] = [];\n  constructor(private couponService: CouponService) { }\n\n  ngOnInit(): void {\n    this.couponService.getAllCoupons().subscribe(data => {\n      this.coupons = data;\n    });\n  }\n\n}\n","<div>\n  <br><br>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Address</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Shipping date</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"coupons.length; else noCoupons;\">\n      <tr *ngFor=\"let coupon of coupons\">\n        <td lang=\"ru\">{{coupon.id}}</td>\n        <td lang=\"ru\">{{coupon.address}}</td>\n        <td lang=\"ru\">{{coupon.status}}</td>\n        <td lang=\"ru\">{{coupon.name}}</td>\n        <td lang=\"ru\">{{coupon.shipping}}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<ng-template #noCoupons>\n  <tbody>\n  <tr>\n    <td></td>\n    <td></td>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">Coupons</td>\n    <td lang=\"ru\">available</td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  constructor() { }\n}\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {OrderService} from '../../services/order.service';\nimport {OrderResponseDTO} from '../../model/order-responseDTO';\n\n@Component({\n  selector: 'app-operator-order',\n  templateUrl: './operator-order.component.html',\n  styleUrls: ['./operator-order.component.css']\n})\nexport class OperatorOrderComponent implements OnInit {\n  orders: OrderResponseDTO[] = [];\n  constructor(private orderService: OrderService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.orderService.findAll('operator').subscribe(data => {\n      this.orders = data;\n    });\n  }\n\n  confirmOrder(id: bigint): void {\n    this.orderService.orderConfirmation(id).subscribe(data => data);\n    this.cdr.detectChanges();\n  }\n}\n","<div>\n  <br><br>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Ration Name</th>\n        <th scope=\"col\">Shipping date</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Subscribed</th>\n        <th scope=\"col\">Address</th>\n        <th scope=\"col\">Confirm</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"orders.length; else noOrders;\">\n      <tr *ngFor=\"let order of orders\">\n        <td lang=\"ru\">{{order.id}}</td>\n        <td lang=\"ru\">{{order.rationName}}</td>\n        <td lang=\"ru\">{{order.date}}</td>\n        <td lang=\"ru\">{{order.status}}</td>\n        <td lang=\"ru\">{{order.subscribed}}</td>\n        <td lang=\"ru\">{{order.fullAddress}}</td>\n        <td lang=\"ru\"><button mat-mini-fab class=\"button button5\" (click)=\"confirmOrder(order.id)\"><mat-icon>done</mat-icon></button></td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<ng-template #noOrders>\n  <tbody>\n  <tr>\n    <td></td>\n    <td></td>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">ration</td>\n    <td lang=\"ru\">available</td>\n    <td></td>\n    <td></td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {Ration} from '../../model/ration';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RationService} from '../../services/ration-service.service';\n\n@Component({\n  selector: 'app-ration-form',\n  templateUrl: './ration-form.component.html',\n  styleUrls: ['./ration-form.component.css']\n})\nexport class RationFormComponent implements OnInit {\n\n  ration: Ration;\n\n  constructor(private router: Router, private route: ActivatedRoute, private rationService: RationService) {\n    this.ration = new Ration();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    this.rationService.save(this.ration).subscribe(result => this.gotoRationList());\n  }\n\n  gotoRationList(): void {\n    this.router.navigate(['/rations']);\n  }\n}\n","<div class=\"card my-5\">\n  <div class=\"card-body\" style=\"width: max-content\">\n    <form (ngSubmit)=\"onSubmit()\" #rationForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"ration_name\">Ration name</label>\n        <input type=\"text\" [(ngModel)]=\"ration.name\"\n               class=\"form-control\"\n               id=\"ration_name\"\n               name=\"ration_name\"\n               placeholder=\"Enter the ration name\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Ration name is required</div>\n      <div class=\"form-group\">\n        <label for=\"description\">Ration description</label>\n        <input type=\"text\" [(ngModel)]=\"ration.description\"\n               class=\"form-control\"\n               id=\"description\"\n               name=\"description\"\n               placeholder=\"Enter a description\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Ration description is required</div>\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input type=\"number\" [(ngModel)]=\"ration.price\"\n               class=\"form-control\"\n               id=\"price\"\n               name=\"ration_price\"\n               placeholder=\"Enter a price\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Price of the ration is required</div>\n      <button type=\"submit\" [disabled]=\"!rationForm.form.valid\"\n              class=\"btn btn-info\">Submit</button>\n    </form>\n  </div>\n</div>\n","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'foodAngularUI';\n\n  constructor(private router: Router) {\n    this.title = 'Food Delivery Service';\n  }\n}\n","<app-login></app-login>\n<router-outlet></router-outlet>\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {CouponService} from '../../services/coupon.service';\nimport {CourierCouponDTO} from '../../model/courier-coupon-dto';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-courier-coupons',\n  templateUrl: './courier-coupons.component.html',\n  styleUrls: ['./courier-coupons.component.css']\n})\nexport class CourierCouponsComponent implements OnInit {\n  coupons: CourierCouponDTO[] = [];\n  constructor(private couponService: CouponService, private cdr: ChangeDetectorRef, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.couponService.getCouponsForCourier().subscribe(data => {\n      this.coupons = data;\n    });\n  }\n\n  doneCoupon(id: bigint): void {\n    this.couponService.couponDone(id, 'courier').subscribe(data => this.ngOnInit());\n  }\n\n  gotToOrderList(): void {\n    this.cdr.detectChanges();\n  }\n}\n","<div>\n  <br><br><br><br>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Address</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Shipping date</th>\n        <th scope=\"col\">Confirm</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"coupons.length; else noCoupons;\">\n      <tr *ngFor=\"let coupon of coupons\">\n        <td lang=\"ru\">{{coupon.id}}</td>\n        <td lang=\"ru\">{{coupon.address}}</td>\n        <td lang=\"ru\">{{coupon.status}}</td>\n        <td lang=\"ru\">{{coupon.shipping}}</td>\n        <td lang=\"ru\"><button mat-mini-fab class=\"button button5\" (click)=\"doneCoupon(coupon.id)\"><mat-icon>done</mat-icon></button></td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<ng-template #noCoupons>\n  <tbody>\n  <tr>\n    <td>#</td>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">Coupons</td>\n    <td lang=\"ru\">available</td>\n    <td lang=\"ru\">for shipping</td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {Login} from '../../model/login';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { CurrentUserService } from '../../model/current-user-service';\nimport {AuthResponseDTO} from '../../model/authresponsedto';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // login: Login;\n  auth: AuthResponseDTO;\n  password: string;\n  username: string;\n  isLogin = false;\n  isRegistr = false;\n  constructor(private loginService: LoginService, private router: Router, private currentUserService: CurrentUserService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  doLogin(): void {\n    this.loginService.login(this.username, this.password).subscribe(data => {\n      this.auth = JSON.parse(data);\n      const jwt = this.auth.jwt;\n      const role = this.auth.role;\n      const id = this.auth.id;\n      console.log('data = ', data);\n      console.log(jwt);\n      console.log(role);\n      console.log(id);\n      localStorage.setItem(String(id), jwt);\n      this.currentUserService.setCurrentId(id);\n      console.log('In the current user service id = ', this.currentUserService.getCurrentId());\n      if (role !== null && (role === 'ROLE_CLIENT' || role === 'ROLE_COOK' || role === 'ROLE_COURIER' || role === 'ROLE_OPERATOR')) {\n        this.isLogin = true;\n      }\n    });\n  }\n\n  registration(): void {\n    this.isRegistr = !this.isRegistr;\n  }\n}\n","<div class=\"container\" *ngIf=\"isLogin===false\">\n  <br><br><br><br><br>\n  <div class=\"tiny-reg\">\n    <h4>Log in to your account or register</h4>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"username\" placeholder=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"password\" class=\"form-control\">\n    </div>\n    <div class = \"inline\">\n      <button type=\"submit\"  (click)=\"doLogin()\" class=\"card tiny-btn\">Login</button>\n    </div>\n    <div class=\"inline\">\n      <button (click)=\"registration()\" type=\"button\" class=\"card tiny-btn\" target=\"_blank\" rel=\"noopener\">Registration</button>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"isRegistr\">\n    <app-registration></app-registration>\n</div>\n<div *ngIf=\"isLogin===true\">\n  <div *ngIf=\"auth.role==='ROLE_CLIENT'\">\n    <app-client-dashboard></app-client-dashboard>\n  </div>\n  <div *ngIf=\"auth.role==='ROLE_COOK'\">\n    <app-cook-coupons></app-cook-coupons>\n  </div>\n  <div *ngIf=\"auth.role==='ROLE_COURIER'\">\n    <app-courier-coupons></app-courier-coupons>\n  </div>\n  <div *ngIf=\"auth.role==='ROLE_OPERATOR'\">\n    <app-operator-dashboard></app-operator-dashboard>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-operator-dashboard',\n  templateUrl: './operator-dashboard.component.html',\n  styleUrls: ['./operator-dashboard.component.css']\n})\nexport class OperatorDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" >\n  <br><br>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div>\n        <div class=\"card-body\">\n          <ul class=\"text-center list-inline py-3\">\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/rations\" class=\"btn button-blue\">List Of Rations</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/addRation\" class=\"btn button-blue\">Add Ration</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/operator_orders\" class=\"btn button-blue\">List Of Orders</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/operator_coupons\" class=\"btn button-blue\">List Of Coupons</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport { RationListComponent } from './components/ration-list/ration-list.component';\nimport { RationFormComponent } from './components/ration-form/ration-form.component';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RationService} from './services/ration-service.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport {LoginService} from './services/login.service';\nimport {CurrentUserService} from './model/current-user-service';\nimport {OperatorDashboardComponent} from './components/operator-dashboard/operator-dashboard.component';\nimport {OperatorOrderComponent} from './components/operator-order/operator-order.component';\nimport {OperatorCouponsComponent} from './components/operator-coupons/operator-coupons.component';\nimport {ClientOrderComponent} from './components/client-order/client-order.component';\nimport {ClientRefaundComponent} from './components/client-refaund/client-refaund.component';\nimport {ClientDashboardComponent} from './components/client-dashboard/client-dashboard.component';\nimport {CourierCouponsComponent} from './components/courier-coupons/courier-coupons.component';\nimport {CookCouponsComponent} from './components/cook-coupons/cook-coupons.component';\nimport {ClientListComponent} from './components/client-list/client-list.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {ClientService} from './services/client.service';\nimport {CouponService} from './services/coupon.service';\nimport {OrderService} from './services/order.service';\n\n\nconst routes: Routes = [\n   // {path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'rations', component: RationListComponent},\n  { path: 'addRation', component: RationFormComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'registration', component: RegistrationComponent},\n  { path: 'operator', component: OperatorDashboardComponent},\n  { path: 'operator_orders', component: OperatorOrderComponent},\n  { path: 'operator_coupons', component: OperatorCouponsComponent},\n  { path: 'make_order', component: ClientOrderComponent},\n  { path: 'refund', component: ClientRefaundComponent},\n  { path: 'order_list', component: ClientListComponent},\n  { path: 'cook_list', component: CookCouponsComponent},\n  { path: 'courier_list', component: CourierCouponsComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RationListComponent,\n    RationFormComponent,\n    LoginComponent,\n    RegistrationComponent,\n    OperatorDashboardComponent,\n    ClientDashboardComponent,\n    OperatorOrderComponent,\n    ClientOrderComponent,\n    OperatorCouponsComponent,\n    CourierCouponsComponent,\n    CookCouponsComponent,\n    ClientRefaundComponent,\n    ClientListComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    MatIconModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n  providers: [RationService, LoginService, CurrentUserService, ClientService, CouponService, OrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {OrderDTO} from '../../model/orderdto';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RationService} from '../../services/ration-service.service';\nimport {OrderService} from '../../services/order.service';\nimport {Ration} from '../../model/ration';\n\n@Component({\n  selector: 'app-client-order',\n  templateUrl: './client-order.component.html',\n  styleUrls: ['./client-order.component.css']\n})\nexport class ClientOrderComponent implements OnInit {\n  order: OrderDTO;\n  rations: Ration[] = [];\n\n  constructor(private router: Router, private route: ActivatedRoute,\n              private orderServices: OrderService, private rationService: RationService) {\n    this.order = new OrderDTO();\n  }\n\n  ngOnInit(): void {\n    this.rationService.findAllForClient().subscribe(data => {\n      this.rations = data;\n    });\n  }\n\n  onSubmit(): void {\n    this.orderServices.makeOrder(this.order).subscribe(result => this.gotToOrderList());\n  }\n\n  gotToOrderList(): void {\n    this.router.navigate(['/order_list']);\n  }\n}\n","<div class=\"card my-5\">\n  <div class=\"card-body\" style=\"width: max-content\">\n    <form (ngSubmit)=\"onSubmit()\" #rationForm=\"ngForm\">\n<!--      <div class=\"form-group\">-->\n<!--        <label for=\"order_rationId\">Ration name</label>-->\n<!--          <select class=\"custom-select\" id=\"order_rationId\">-->\n<!--            <option value=\"\">Choose ration</option>-->\n<!--            <option class=\"mat-option\" *ngFor=\"let ration of rations\" lang=\"ru\" [ngValue]=\"order.rationId\">-->\n<!--              {{ration.id}}</option>-->\n<!--          </select>-->\n<!--      </div>-->\n      <div class=\"form-group\">\n        <label for=\"ration_id\">Ration id</label>\n        <input type=\"number\" [(ngModel)]=\"order.rationId\"\n               class=\"form-control\"\n               id=\"ration_id\"\n               name=\"ration_id\"\n               placeholder=\"Enter a ration id\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Ration number is required</div>\n      <div class=\"form-group\">\n        <label for=\"order_address\">Address</label>\n        <input type=\"text\" [(ngModel)]=\"order.address\"\n               class=\"form-control\"\n               id=\"order_address\"\n               name=\"order_address\"\n               placeholder=\"Enter a address\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Address is required</div>\n      <div class=\"form-group\">\n        <label for=\"shipping\">Shipping Date</label>\n        <input type=\"date\" [(ngModel)]=\"order.shippingDate\"\n               class=\"form-control\"\n               id=\"shipping\"\n               name=\"shipping\"\n               placeholder=\"Enter shipping date\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Date is required</div>\n        <div class=\"form-group\">\n          <label for=\"subscribe\">Subscribe</label>\n          <input type=\"number\" [(ngModel)]=\"order.subscribed\"\n                 class=\"form-control\"\n                 id=\"subscribe\"\n                 name=\"subscribe\"\n                 placeholder=\"Enter subscribe times\"\n                 required #name=\"ngModel\">\n        </div>\n        <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Subscribed is required</div>\n      <button type=\"submit\" [disabled]=\"!rationForm.form.valid\"\n              class=\"btn button-blue\">Submit</button>\n    </form>\n  </div>\n</div>\n<div>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Ration Name</th>\n        <th scope=\"col\">Ration Description</th>\n        <th scope=\"col\">Price</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"rations.length; else noRations;\">\n      <tr *ngFor=\"let ration of rations\">\n        <td lang=\"ru\">{{ration.id}}</td>\n        <td lang=\"ru\">{{ration.name}}</td>\n        <td lang=\"ru\">{{ration.description}}</td>\n        <td>{{ration.price}}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<ng-template #noRations>\n  <tbody>\n  <tr>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">rations</td>\n    <td lang=\"ru\">available</td>\n    <td>yet</td>\n    <td>!</td>\n  </tr>\n  </tbody>\n</ng-template>\n\n\n<ng-template #noRations><p>no rations yet</p></ng-template>\n","export class CurrentUserService {\n  id: number;\n\n  setCurrentId(id: number): void {\n    this.id = id;\n  }\n\n  getCurrentId(): number {\n    const temp = this.id;\n    // this.id = undefined;\n    return temp;\n  }\n}\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {CouponService} from '../../services/coupon.service';\nimport {CookCouponDTO} from '../../model/cook-coupon-dto';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-cook-coupons',\n  templateUrl: './cook-coupons.component.html',\n  styleUrls: ['./cook-coupons.component.css']\n})\nexport class CookCouponsComponent implements OnInit {\n  coupons: CookCouponDTO[] = [];\n  constructor(private couponService: CouponService, private cdr: ChangeDetectorRef, private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.couponService.getAllCouponsForCook().subscribe(data => {\n      this.coupons = data;\n    });\n  }\n\n  doneCoupon(id: bigint): void {\n    this.couponService.couponDone(id, 'cook').subscribe(data => this.ngOnInit());\n  }\n  gotToOrderList(): void {\n    this.cdr.detectChanges();\n  }\n}\n","<div>\n  <br><br><br><br>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Ration Name</th>\n        <th scope=\"col\">Shipping date</th>\n        <th scope=\"col\">Confirm</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"coupons.length; else noCoupons;\">\n      <tr *ngFor=\"let coupon of coupons\">\n        <td lang=\"ru\">{{coupon.id}}</td>\n        <td lang=\"ru\">{{coupon.name}}</td>\n        <td lang=\"ru\">{{coupon.shipping}}</td>\n        <td lang=\"ru\"><button mat-mini-fab class=\"button button5\" (click)=\"doneCoupon(coupon.id)\"><mat-icon>done</mat-icon></button></td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<ng-template #noCoupons>\n  <tbody>\n  <tr>\n    <td>#</td>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">Coupons</td>\n    <td lang=\"ru\">available</td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {UserRegistrationDTO} from '../../model/userregistrationdto';\nimport {LoginService} from '../../services/login.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  user: UserRegistrationDTO;\n  color = '#fff';\n  iscliced = false;\n  clickedText = 'Registered';\n  n: string;\n  surname: string;\n  password: string;\n  username: string;\n  phoneNumber: string;\n  account: number;\n  constructor(public loginService: LoginService) {}\n\n  ngOnInit(): void {\n    this.iscliced = false;\n    this.color = '#fff';\n  }\n  registered(): void {\n    this.iscliced = !this.iscliced;\n    this.clickedText = 'complete';\n    this.color = '#9aec74';\n    this.user = new UserRegistrationDTO(this.username, this.password, this.n, this.surname, this.phoneNumber, this.account);\n    this.loginService.registerUser(this.user);\n  }\n}\n","<div class=\"tiny-reg\">\n  <h4>Registration</h4>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"username\" placeholder=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"password\" [(ngModel)]=\"password\" placeholder=\"password\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"n\" placeholder=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"surname\" placeholder=\"surname\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"phoneNumber\" placeholder=\"phone number\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"account\" placeholder=\"balance\" class=\"form-control\">\n    </div>\n    <div class = \"inline\">\n      <button type=\"submit\"  (click)=\"registered()\" [ngStyle]=\"{backgroundColor: color}\" class=\"card tiny-btn\">{{clickedText}}</button>\n    </div>\n</div>\n","import {ApplicationRef, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {Ration} from '../../model/ration';\nimport {RationService} from '../../services/ration-service.service';\n\n@Component({\n  selector: 'app-ration-list',\n  templateUrl: './ration-list.component.html',\n  styleUrls: ['./ration-list.component.css']\n})\nexport class RationListComponent implements OnInit {\n  rations: Ration[] = [];\n  ids: bigint[] = [];\n  constructor(private rationService: RationService, private cdr: ChangeDetectorRef) {\n  }\n\n  deleteComponent(id: bigint): void {\n    if ( this.ids.indexOf(id) === -1) {\n      this.ids.push(id);\n    }else{\n      this.ids.splice(this.ids.indexOf(id), 1);\n    }\n    console.log(this.ids.toString());\n  }\n\n  sendDeleteIds(): void {\n    if (this.ids.length > 0) {\n      console.log('ids is more then 0');\n      this.rationService.delete(this.ids).subscribe(data => data);\n      this.rations = this.rations.filter(i => !this.ids.includes(i.id));\n      this.cdr.detectChanges();\n    }\n  }\n\n  ngOnInit(): void {\n    this.rationService.findAll().subscribe(data => {\n      this.rations = data;\n    });\n  }\n\n}\n","<div>\n  <br><br>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Ration Name</th>\n        <th scope=\"col\">Ration Description</th>\n        <th scope=\"col\">Price</th>\n        <th scope=\"col\">Select</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"rations.length; else noRations;\">\n        <tr *ngFor=\"let ration of rations\">\n          <td lang=\"ru\">{{ration.id}}</td>\n          <td lang=\"ru\">{{ration.name}}</td>\n          <td lang=\"ru\">{{ration.description}}</td>\n          <td>{{ration.price}}</td>\n          <td><input type=\"checkbox\" name=\"needDelete\" id=\"{{ration.id}}}\" (click)=\"deleteComponent(ration.id)\"></td>\n        </tr>\n      </tbody>\n    </table>\n    <div class=\"row\" *ngIf=\"ids.length\">\n      <div class=\"col-md-12\">\n        <div>\n          <div class=\"card-body\">\n            <ul class=\"text-center list-inline py-3\">\n              <li class=\"list-inline-item\">\n                <a  class=\"btn button-blue\" (click)=\"sendDeleteIds()\" style=\"color: #ffffff\">Delete Ration</a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #noRations>\n  <tbody>\n  <tr>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">rations</td>\n    <td lang=\"ru\">available</td>\n    <td>yet</td>\n    <td>!</td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {RationService} from '../../services/ration-service.service';\nimport {Ration} from '../../model/ration';\nimport {ClientService} from '../../services/client.service';\nimport {OrderService} from '../../services/order.service';\n\n@Component({\n  selector: 'app-client-refaund',\n  templateUrl: './client-refaund.component.html',\n  styleUrls: ['./client-refaund.component.css']\n})\nexport class ClientRefaundComponent implements OnInit {\n\n  id: bigint;\n  message: string;\n\n  constructor(private router: Router, private route: ActivatedRoute, private orderService: OrderService) {}\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    alert('Thanks for you feedback. We will improve it.');\n    this.orderService.makeRefund(this.id).subscribe(data => this.gotoRationList());\n  }\n\n  gotoRationList(): void {\n    this.router.navigate(['/order_list']);\n  }\n\n}\n","<div class=\"card my-5\">\n  <div class=\"card-body\" style=\"width: max-content\">\n    <form (ngSubmit)=\"onSubmit()\" #rationForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"order_id\">Order id</label>\n        <input type=\"number\" [(ngModel)]=\"id\"\n               class=\"form-control\"\n               id=\"order_id\"\n               name=\"order_id\"\n               placeholder=\"Enter a order id\"\n               required #name=\"ngModel\">\n      </div>\n      <div [hidden]=\"!name.pristine\" class=\"alert alert-danger\">Ration number is required</div>\n      <div class=\"form-group\">\n        <label for=\"message\">What's wrong?</label>\n        <input type=\"text\"\n               class=\"form-control\"\n               id=\"message\"\n               name=\"message\"\n               placeholder=\"Why are you want make refund? \">\n      </div>\n      <button type=\"submit\" [disabled]=\"!rationForm.form.valid\"\n              class=\"btn button-blue\">Submit</button>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {CurrentUserService} from '../model/current-user-service';\nimport {Observable} from 'rxjs';\nimport {CouponDTO} from '../model/couponDTO';\nimport {CookCouponDTO} from '../model/cook-coupon-dto';\nimport {CourierCouponDTO} from '../model/courier-coupon-dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CouponService {\n  id: number;\n  getAllOperatorCoupons = 'http://localhost:8080/operator/operator_coupons';\n  getAllCookCoupons = 'http://localhost:8080/cook/cook_coupons';\n  getCourierCoupons = 'http://localhost:8080/courier/coupons';\n  constructor(private http: HttpClient, private modelService: CurrentUserService) {\n    this.id = modelService.getCurrentId();\n  }\n\n  public getAllCoupons(): Observable<CouponDTO[]> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.get<CouponDTO[]>(this.getAllOperatorCoupons, {headers});\n  }\n\n  public getAllCouponsForCook(): Observable<CookCouponDTO[]> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.get<CookCouponDTO[]>(this.getAllCookCoupons, {headers});\n  }\n\n  public getCouponsForCourier(): Observable<CourierCouponDTO[]> {\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + localStorage.getItem(String(this.id)));\n    return this.http.get<CourierCouponDTO[]>(this.getCourierCoupons, {headers});\n  }\n\n  public couponDone(id: bigint, person: string): Observable<any> {\n    const token = localStorage.getItem(String(this.id));\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return person === 'cook' ? this.http.post<bigint>(this.getAllCookCoupons, id, {headers}) :\n      this.http.post<bigint>(this.getCourierCoupons, id, {headers});\n  }\n}\n","export class AuthRequestDTO {\r\n  constructor(\r\n    public username: string,\r\n    public password: string\r\n  ) {\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { OrderDTO } from '../model/orderdto';\nimport {Observable} from 'rxjs';\nimport {CurrentUserService} from '../model/current-user-service';\nimport {OrderResponseDTO} from '../model/order-responseDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  id: number;\n  clientUrl = 'http://localhost:8080/client/client_order';\n  clientRefund = 'http://localhost:8080/client/refund';\n  allOrderOperatorUrl = 'http://localhost:8080/operator/orders';\n  constructor(private http: HttpClient, private modelService: CurrentUserService) {\n    this.id = modelService.getCurrentId();\n  }\n\n  public makeOrder(order: OrderDTO): Observable<any> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.post<OrderDTO>(this.clientUrl, order, {headers});\n  }\n\n  public findAll(whoIS: string): Observable<OrderResponseDTO[]> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return whoIS === 'client' ? this.http.get<OrderResponseDTO[]>(this.clientUrl, {headers}) :\n      this.http.get<OrderResponseDTO[]>(this.allOrderOperatorUrl, {headers});\n  }\n\n  public orderConfirmation(id: bigint): Observable<any> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.post<bigint>(this.allOrderOperatorUrl, id, {headers});\n  }\n\n  public makeRefund(id: bigint): Observable<any> {\n    const token = localStorage.getItem(String(this.id));\n    console.log(token);\n    console.log('Id in ration service is ' +  this.id);\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    return this.http.post<OrderDTO>(this.clientRefund, id, {headers});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-dashboard',\n  templateUrl: './client-dashboard.component.html',\n  styleUrls: ['./client-dashboard.component.css']\n})\nexport class ClientDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" >\n  <br><br>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div>\n        <div class=\"card-body\">\n          <ul class=\"text-center list-inline py-3\">\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/order_list\" class=\"btn button-blue\">My orders</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/make_order\" class=\"btn button-blue\">Make order</a>\n            </li>\n            <li class=\"list-inline-item\">\n              <a routerLink=\"/refund\" class=\"btn button-blue\">Refund order</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {OrderResponseDTO} from '../../model/order-responseDTO';\nimport {OrderService} from '../../services/order.service';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.css']\n})\nexport class ClientListComponent implements OnInit {\n  orders: OrderResponseDTO[] = [];\n  constructor(private orderService: OrderService) { }\n\n  ngOnInit(): void {\n    this.orderService.findAll('client').subscribe(data => {\n      this.orders = data;\n    });\n  }\n}\n","<div>\n  <br><br>\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"blue\">\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Ration Name</th>\n        <th scope=\"col\">Shipping date</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Subscribed</th>\n        <th scope=\"col\">Address</th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"orders.length; else noOrders;\">\n      <tr *ngFor=\"let order of orders\">\n        <td lang=\"ru\">{{order.id}}</td>\n        <td lang=\"ru\">{{order.rationName}}</td>\n        <td lang=\"ru\">{{order.date}}</td>\n        <td lang=\"ru\">{{order.status}}</td>\n        <td lang=\"ru\">{{order.subscribed}}</td>\n        <td lang=\"ru\">{{order.fullAddress}}</td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<ng-template #noOrders>\n  <tbody>\n  <tr>\n    <td></td>\n    <td></td>\n    <td lang=\"ru\">No</td>\n    <td lang=\"ru\">ration</td>\n    <td lang=\"ru\">available</td>\n    <td></td>\n  </tr>\n  </tbody>\n</ng-template>\n","export class OrderDTO {\r\n  public rationId: number;\r\n  public address: string;\r\n  public shippingDate: Date;\r\n  public subscribed: number;\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}